Intel(R) Architecture Code Analyzer Version -  v3.0-28-g1ba2cbb build date: 2017-10-23;16:42:45
Analyzed File -  obj/SKv3_1.state.avx.o
Binary Format - 64Bit
Architecture  -  SKX
Analysis Type - Throughput

Throughput Analysis Report
--------------------------
Block Throughput: 56.00 Cycles       Throughput Bottleneck: Backend
Loop Count:  25
Port Binding In Cycles Per Iteration:
--------------------------------------------------------------------------------------------------
|  Port  |   0   -  DV   |   1   |   2   -  D    |   3   -  D    |   4   |   5   |   6   |   7   |
--------------------------------------------------------------------------------------------------
| Cycles |  8.0    56.0  |  8.0  | 13.0    10.0  | 13.0    11.0  |  8.0  |  6.0  |  1.1  |  0.0  |
--------------------------------------------------------------------------------------------------

DV - Divider pipe (on port 0)
D - Data fetch pipe (on ports 2 and 3)
F - Macro Fusion with the previous instruction occurred
* - instruction micro-ops not bound to a port
^ - Micro Fusion occurred
# - ESP Tracking sync uop was issued
@ - SSE instruction followed an AVX256/AVX512 instruction, dozens of cycles penalty is expected
X - instruction not supported, was not accounted in Analysis

| Num Of   |                    Ports pressure in cycles                         |      |
|  Uops    |  0  - DV    |  1   |  2  -  D    |  3  -  D    |  4   |  5   |  6   |  7   |
-----------------------------------------------------------------------------------------
|   1      |             |      | 1.0     1.0 |             |      |      |      |      | movsxd rax, dword ptr [rdi+r14*4]
|   1      |             |      |             | 1.0     1.0 |      |      |      |      | movsxd r10, dword ptr [rdi+r14*4+0x8]
|   1      |             |      | 1.0     1.0 |             |      |      |      |      | movsxd rdx, dword ptr [rdi+r14*4+0x4]
|   1      |             |      |             | 1.0     1.0 |      |      |      |      | vmovsd xmm14, qword ptr [rbx+rax*8]
|   1      |             |      | 1.0     1.0 |             |      |      |      |      | movsxd rax, dword ptr [rdi+r14*4+0xc]
|   1      |             |      |             | 1.0     1.0 |      |      |      |      | vmovsd xmm1, qword ptr [rbx+r10*8]
|   2      |             |      | 1.0     1.0 |             |      | 1.0  |      |      | vmovhpd xmm2, xmm14, qword ptr [rbx+rdx*8]
|   2      |             |      |             | 1.0     1.0 |      | 1.0  |      |      | vmovhpd xmm3, xmm1, qword ptr [rbx+rax*8]
|   1      |             |      |             |             |      | 1.0  |      |      | vinsertf128 ymm14, ymm2, xmm3, 0x1
|   1      |             | 1.0  |             |             |      |      |      |      | vsubpd ymm4, ymm14, ymm13
|   2^     | 1.0     8.0 |      | 1.0     1.0 |             |      |      |      |      | vdivpd ymm0, ymm4, ymmword ptr [rip]
|   5^#    |             |      | 1.0     1.0 | 1.0     1.0 | 1.0  |      |      |      | call qword ptr [rip]
|   1      |             | 1.0  |             |             |      |      |      |      | vaddpd ymm1, ymm0, ymm12
|   2^     | 1.0         |      |             | 1.0     1.0 |      |      |      |      | vsubpd ymm3, ymm14, ymmword ptr [rip]
|   1      | 1.0     8.0 |      |             |             |      |      |      |      | vdivpd ymm2, ymm12, ymm1
|   1      | 1.0     8.0 |      |             |             |      |      |      |      | vdivpd ymm0, ymm3, ymm11
|   2      |             |      | 1.0         |             | 1.0  |      |      |      | vmovupd xmmword ptr [r15+r14*8], xmm2
|   2      |             |      |             | 1.0         | 1.0  |      |      |      | vextractf128 xmmword ptr [r15+r14*8+0x10], ymm2, 0x1
|   5^#    |             |      | 1.0     1.0 | 1.0     1.0 | 1.0  |      |      |      | call qword ptr [rip]
|   1      |             | 1.0  |             |             |      |      |      |      | vaddpd ymm14, ymm0, ymm12
|   1      | 1.0     8.0 |      |             |             |      |      |      |      | vdivpd ymm15, ymm10, ymm14
|   1      | 1.0     8.0 |      |             |             |      |      |      |      | vdivpd ymm14, ymm8, ymm15
|   2      |             |      | 1.0         |             | 1.0  |      |      |      | vmovupd ymmword ptr [r13+r14*8], ymm15
|   1      |             | 1.0  |             |             |      |      |      |      | vmulpd ymm0, ymm9, ymm14
|   5^#    |             |      | 1.0     1.0 | 1.0     1.0 | 1.0  |      |      |      | call qword ptr [rip]
|   1      |             |      |             | 1.0     1.0 |      |      |      |      | vmovupd xmm3, xmmword ptr [r15+r14*8]
|   1      |             |      | 1.0     1.0 |             |      |      |      |      | vmovupd xmm2, xmmword ptr [r12+r14*8]
|   1      |             | 1.0  |             |             |      |      |      |      | vsubpd ymm0, ymm12, ymm0
|   2      |             |      |             | 1.0     1.0 |      | 1.0  |      |      | vinsertf128 ymm4, ymm3, xmmword ptr [r15+r14*8+0x10], 0x1
|   1      | 1.0     8.0 |      |             |             |      |      |      |      | vdivpd ymm5, ymm4, ymm15
|   2^     |             |      | 1.0     1.0 |             |      | 1.0  |      |      | vxorpd ymm6, ymm5, ymmword ptr [rip]
|   1      | 1.0     8.0 |      |             |             |      |      |      |      | vdivpd ymm7, ymm6, ymm14
|   2      |             |      |             | 1.0     1.0 |      | 1.0  |      |      | vinsertf128 ymm1, ymm2, xmmword ptr [r12+r14*8+0x10], 0x1
|   1      |             | 1.0  |             |             |      |      |      |      | vsubpd ymm14, ymm7, ymm1
|   1      |             | 1.0  |             |             |      |      |      |      | vmulpd ymm15, ymm0, ymm14
|   1      |             | 1.0  |             |             |      |      |      |      | vaddpd ymm0, ymm1, ymm15
|   2      |             |      | 1.0         |             | 1.0  |      |      |      | vmovupd xmmword ptr [r12+r14*8], xmm0
|   2      |             |      |             | 1.0         | 1.0  |      |      |      | vextractf128 xmmword ptr [r12+r14*8+0x10], ymm0, 0x1
|   1      |             |      |             |             |      |      | 1.0  |      | add r14, 0x4
|   1*     |             |      |             |             |      |      |      |      | cmp r14, rsi
|   0*F    |             |      |             |             |      |      |      |      | jb 0xffffffffffffff17
Total Num Of Uops: 64
Analysis Notes:
Backend allocation was stalled due to unavailable allocation resources.
